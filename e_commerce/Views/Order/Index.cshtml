@model IEnumerable<e_commerce.EF.Order>
@{
    ViewBag.Title = "Index";

}

<h2>Index</h2>


<table class="table">
    <tr>
        <th>
            User Name
        </th>
        <th>
            Product Name
        </th>
        <th>
            Unit Price
        </th>
        <th>
           Quantity
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th>
            Total Amount
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>

        <th><center>Modify Order</center></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.Name)
            </td>
            <td>
                @{

                    foreach (var i in item.ProductOrders)
                    {
                        @i.product.Name <br />

                    }
                }
            </td>
            <td>
                @{

                    foreach (var i in item.ProductOrders)
                    {
                        @i.product.Price <br />

                    }
                }
            </td>
            <td>
                @{

                    foreach (var i in item.ProductOrders)
                    {
                        @i.qty<br />

                    }
                }
            </td>
            <td>
                @{

                    foreach (var i in item.ProductOrders)
                    {
                        int Amount = i.qty * i.product.Price;
                        @Amount <br />
                    }
                }
            </td>
            <td>
                @item.Amount
            </td>
            <td>
                @{
                    @item.Date.ToString("dd/MM/yyyy");
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>


            @if (item.Status.Equals("Cancelled")|| item.Status.Equals("Cancelled by Admin"))
            {
                <td>
                    @Html.ActionLink("Delete", "Delete", new { id = item.id }, new { @class = "btn btn-default" })
                </td>
            }


            @if (item.Status.Equals("Processing"))
            {
                <td>
                    @Html.ActionLink("Delivered", "Delivered", new { id = item.id }, new { @class = "btn btn-default" }) |
                    @Html.ActionLink("Cancel", "Cancel", new { id = item.id }, new { @class = "btn btn-default" })
                </td>

            }

            @if (item.Status.Equals("Order Placed"))
            {
                <td>
                    @Html.ActionLink("Processing", "Processing", new { id = item.id }, new { @class = "btn btn-default" }) |
                    @Html.ActionLink("Delivered", "Delivered", new { id = item.id }, new { @class = "btn btn-default" }) |
                    @Html.ActionLink("Cancel", "Cancel", new { id = item.id }, new { @class = "btn btn-default" })
                </td>

            }

            @if (item.Status.Equals("Delivered"))
            {
                <td>
                    @Html.ActionLink("Cancel", "Index", new { id = item.id }, new { @class = "btn btn-default" , @disabled = "true" })
                </td>

            }

        </tr>
    }

</table>
